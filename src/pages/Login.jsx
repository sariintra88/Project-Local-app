import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import axios from 'axios';
import './Login.css';
import logo from '../assets/mutelu-logo.png';

function Login() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [error, setError] = useState('');
  const [showSuccessPopup, setShowSuccessPopup] = useState(false);
  const navigate = useNavigate();

  // ‡πÉ‡∏ä‡πâ useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡πà‡∏≠‡∏ô popup ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏õ‡∏Ñ‡∏£‡∏ö 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  useEffect(() => {
    let timer;
    if (showSuccessPopup) {
      timer = setTimeout(() => {
        setShowSuccessPopup(false);
        // ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ navigate ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å popup ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à
        navigate('/');
        window.location.reload(); // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö refresh ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Navbar ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà
      }, 2000);
    }
    return () => clearTimeout(timer);
  }, [showSuccessPopup, navigate]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');

    try {
      const response = await axios.post('http://localhost:5001/auth/login', {
        username,
        password
      });

      console.log('Login success:', response.data);

      // Store token and username in localStorage
      localStorage.setItem('token', response.data.token);
      localStorage.setItem('username', username);

      // ‡πÅ‡∏™‡∏î‡∏á popup ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£ navigate ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      setShowSuccessPopup(true);

      // ‡∏Å‡∏≤‡∏£ navigate ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢ useEffect ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å popup ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡πâ‡∏ß
    } catch (err) {
      console.error('Login error:', err.response?.data || err.message);
      setError(err.response?.data?.message || 'Login failed');
    }
  };

  return (
      <div className="login-page">
        {showSuccessPopup && (
            <div className="success-popup">
              <div className="success-popup-content">
                <div className="success-icon">‚úì</div>
                <p>Login successful!</p>
                <p className="success-message">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {username}! ‚úÖ</p>
              </div>
            </div>
        )}

        <div className="login-container">
          <div className="login-logo">
            <img src={logo} alt="MUTELU TRIP" />
          </div>

          <h2 className="login-title">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>

          <form className="login-form" onSubmit={handleSubmit}>
            {error && <p className="error-message">{error}</p>}

            <div className="form-group">
              <input
                  type="text"
                  className="form-input"
                  placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
                  value={username}
                  onChange={(e) => setUsername(e.target.value)}
                  required
              />
            </div>

            <div className="form-group password-group">
              <input
                  type={showPassword ? "text" : "password"}
                  className="form-input"
                  placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  required
              />
              <button
                  type="button"
                  className="toggle-password"
                  onClick={() => setShowPassword(!showPassword)}
              >
                {showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è"}
              </button>
            </div>

            <button type="submit" className="login-submit-btn">
              ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
            </button>
          </form>

          <p className="create-account">
            ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ?
            <Link to="/register" className="create-account-link"> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà</Link>
          </p>
        </div>
      </div>
  );
}

export default Login;